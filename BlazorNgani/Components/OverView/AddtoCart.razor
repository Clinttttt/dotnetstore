@using BlazorNgani.Admin.Components.Services
@page "/AddToCart"
@using Models
@inject IProductService ProductService
@inject ICartService CartService
@inject NavigationManager navigation
@implements IDisposable
@rendermode InteractiveServer
@attribute [StreamRendering]
<div class="flex-col flex flex-wrap sm:flex-wrap lg:flex flex-row gap-9 mt-5 justify-center  items-center flex-wrap min-h-screen">



    @foreach (var p in products)
    {

        <div class="border w-50 max-w-sm  bg-white border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700">

            @if (!string.IsNullOrEmpty(p.CoverImagePath))
            {
                <div class="relative rounded-t-lg overflow-hidden" style="padding-top: 140%;">
                    <!-- 16:9 aspect ratio container -->
                    <img class="absolute top-0 left-0 w-full h-full object-cover"
                         src="@p.CoverImagePath"
                         alt="Book cover image"
                         onerror="this.onerror=null;this.src='path/to/fallback-image.jpg';" />
                </div>
            }

            <div class="px-5 pb-5">

                <h5 class="overflow-y-auto h-38 text-md font-light tracking-tight text-gray-900 dark:text-white wrap-anywhere"><span class="text-lg font-semibold text-secondary-content wrap-anywhere">@p.Title &nbsp;</span>@p.Description</h5>

                <div class="flex items-center mt-2.5 mb-5">
                    <div class="flex items-center space-x-1 rtl:space-x-reverse">
                        <svg class="w-4 h-4 text-yellow-300" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                            <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                        </svg>
                        <svg class="w-4 h-4 text-yellow-300" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                            <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                        </svg>
                        <svg class="w-4 h-4 text-yellow-300" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                            <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                        </svg>
                        <svg class="w-4 h-4 text-yellow-300" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                            <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                        </svg>
                        <svg class="w-4 h-4 text-gray-200 dark:text-gray-600" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 22 20">
                            <path d="M20.924 7.625a1.523 1.523 0 0 0-1.238-1.044l-5.051-.734-2.259-4.577a1.534 1.534 0 0 0-2.752 0L7.365 5.847l-5.051.734A1.535 1.535 0 0 0 1.463 9.2l3.656 3.563-.863 5.031a1.532 1.532 0 0 0 2.226 1.616L11 17.033l4.518 2.375a1.534 1.534 0 0 0 2.226-1.617l-.863-5.03L20.537 9.2a1.523 1.523 0 0 0 .387-1.575Z" />
                        </svg>
                    </div>
                    <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-2.5 py-0.5 rounded-sm dark:bg-blue-200 dark:text-blue-800 ms-3">5.0</span>
                </div>
                <div class="flex items-center justify-between">
                    <span class="text-md font-bold text-gray-900 dark:text-white">$@p.Price</span>
                    <div class="flex flex-col gap-2">
                        <NavLink class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus-ring-primary font-medium rounded-lg text-sm px-2 py-2.5  text-center dark:bg-primary dark:hover:bg-secondary-content dark:focus:ring-secondary-content" href="@($"/ProductOverview/{p.Id}")">
                            see details
                        </NavLink>
                        <button class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus-ring-primary font-medium rounded-lg text-sm px-2 py-2.5  text-center dark:bg-primary dark:hover:bg-secondary-content dark:focus:ring-secondary-content" @onclick="()=> RemoveProduct(p)">
                            Remove Cart
                        </button>
                    </div>
                </div>
            </div>
        </div>




    }

</div>






@code {

    private List<Product> products = new();

    protected override async Task OnInitializedAsync()
    {
        products = await CartService.GetCart();
        CartService.Onchange += RefreshCart;
    }

    private async void RefreshCart()
    {
        products = await CartService.GetCart();
        StateHasChanged();
    }

    public void Dispose()
    {
        CartService.Onchange -= RefreshCart;
    }

    private async Task RemoveProduct(Product product)
    {
        if (products != null)
        {
            await CartService.RemoveFromCart(product);



        }
    }
}



